name: Compile Games
on: 
  pull_request: 
      # types: [ edited, labeled, unlabeled ] 
      branches: [ master, main]  

env:
  GAME_DIR:

jobs:
  compile-games-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git mingw-w64-x86_64-cc
        
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install SplashKit
        run: bash <(curl -s https://raw.githubusercontent.com/splashkit/skm/master/install-scripts/skm-install.sh)

      - name: Find added game
        run: |
          cd $GITHUB_WORKSPACE
          echo "GAME_DIR=$(git diff origin/master...origin/${GITHUB_HEAD_REF} --dirstat --diff-filter=AM arcade-games/ | sed 's/^[ 0-9.]\+% //g')" >> $GITHUB_ENV
          echo Branch: $GITHUB_HEAD_REF, Game Location: $GAME_DIR

      - name: Compile Game
        run: |               
              cd /home/runneradmin/.splashkit                            
              ./skm clang++ $GITHUB_WORKSPACE/$GAME_DIR/program.cpp -o $GITHUB_WORKSPACE/$GAME_DIR/windows-program.exe 

      - name: pwd & ls
        run: |
              pwd
              ls
              echo 'Now the game dir'
              cd $GAME_DIR
              pwd
              ls

      - uses: actions/upload-artifact@v3
        with:
          name: windows-program
          path: ${{ env.GAME_DIR }}/windows-program.exe
  
  compile-games-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout feature branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install SplashKit
        run: | 
          bash <(curl -s https://raw.githubusercontent.com/zbrydon/skm-test/master/install-scripts/skm-install.sh)
      # after install splashkit step check if it is installed
      - name: Add splashkit to path
        run: echo "$HOME/.splashkit" >> $GITHUB_PATH
      - name: Install dependencies, compile splashkit
        run: |
          skm linux install
      - name: Find added game
        run: |
          cd $GITHUB_WORKSPACE
          GAME_DIR=$(git diff origin/master...origin/${GITHUB_HEAD_REF} --dirstat --diff-filter=AM arcade-games/ | sed 's/^[ 0-9.]\+% //g')
          echo "GAME_DIR=$GAME_DIR" >> $GITHUB_ENV
          echo Branch: $GITHUB_HEAD_REF, Game Location: $GAME_DIR
      - name: Compile Game
        run: |
          cd $GITHUB_WORKSPACE/$GAME_DIR
          echo Compiling game...
          skm clang++ program.cpp -o linux-program

      - uses: actions/upload-artifact@v3
        with:
          name: linux-program
          path: ${{ env.GAME_DIR }}/linux-program
          

  compile-games-arm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: pguyot/arm-runner-action@v2

      - name: Install SplashKit
        run: | 
          bash <(curl -s https://raw.githubusercontent.com/zbrydon/skm-test/master/install-scripts/skm-install.sh)
      # after install splashkit step check if it is installed
      - name: Add splashkit to path
        run: echo "$HOME/.splashkit" >> $GITHUB_PATH
      - name: Install dependencies, compile splashkit
        run: |
          skm linux install
      - name: Find added game
        run: |
          cd $GITHUB_WORKSPACE
          GAME_DIR=$(git diff origin/master...origin/${GITHUB_HEAD_REF} --dirstat --diff-filter=AM arcade-games/ | sed 's/^[ 0-9.]\+% //g')
          echo "GAME_DIR=$GAME_DIR" >> $GITHUB_ENV
          echo Branch: $GITHUB_HEAD_REF, Game Location: $GAME_DIR
      - name: Compile Game
        run: |
          cd $GITHUB_WORKSPACE/$GAME_DIR
          echo Compiling game...
          skm clang++ program.cpp -o arm-program

      - uses: actions/upload-artifact@v3
        with:
          name: arm-program
          path: ${{ env.GAME_DIR }}/arm-program
      
      
          
  add-label:
    needs: [ compile-games-windows, compile-games-linux, compile-games-arm ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      

      - uses: actions/download-artifact@v3
        with:
          name: windows-program
          path: ${{ env.GAME_DIR }}
      
      - uses: actions/download-artifact@v3
        with:
          name: linux-program
          path: ${{ env.GAME_DIR }}

      - uses: actions/download-artifact@v3
        with:
          name: arm-program
          path: ${{ env.GAME_DIR }}

      - name: Git Add, Commit, Push
        run: |
          cd $GITHUB_WORKSPACE
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add $GAME_DIR
          git commit -m "Compiled Games"
          git push origin HEAD:${GITHUB_HEAD_REF}

      - name: Add label
        uses: andymckay/labeler@master
        with:
          add-labels: "compiled"



  